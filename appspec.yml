version: 0.0
os: linux
# S3에 있는 zip 파일이 EC2에 배포될 위치를 지정
files:
  - source: / # CodeDeploy에서 전달해 준 파일 중 destination으로 이동시킬 대상을 루트로 지정(전체파일)
    destination: /home/ec2-user/action/ # source에서 지정된 파일을 받을 위치, 이후 jar를 실행하는 등은 destination에서 옮긴 파일들로 진행
    overwrite: yes

permissions: # CodeDeploy에서 EC2서버로 넘겨준 파일들을 모두 ec2-user권한을 갖도록 합니다.
  - object: /
    pattern: "**"
    owner: ec2-user
    group: ec2-user

# ApplicationStart 단계에서 deploy.sh를 실행시키도록 합
hooks: # CodeDeploy배포 단계에서 실행할 명령어를 지정합니다.
  ApplicationStart: # deploy.sh를 ec2-user권한으로 실행합니다.
    - location: scripts/deploy.sh
      runas: ec2-user
     
env: 
    - name: DB_DRIVER
      value: ${{ secrets.DB_DRIVER }
    - name: DB_URL
      value: ${{ secrets.DB_URL }
    - name: DB_USERNAME
      value: ${{ secrets.DB_USERNAME }}
    - name: DB_PW
      value: ${{ secrets.DB_PW }}
#     - name: MAIN_OVERRIDING
#       value: ${{ secrets.MAIN_OVERRIDING }}
    - name: JPA_DDL
      value: ${{ secrets.JPA_DDL }}
    - name: JPA_INITIAL
      value: ${{ secrets.JPA_INITIAL }}
    - name: REDIS
      value: ${{ secrets.REDIS }}
    - name: REDIS_HOST
      value: ${{ secrets.REDIS_HOST }}
    - name: REDIS_PORT
      value: ${{ secrets.REDIS_PORT }}
    - name: MAX_REQ_SIZE
      value: ${{ secrets.MAX_REQ_SIZE }}
    - name: MAX_FILE_SIZE
      value: ${{ secrets.MAX_FILE_SIZE }}
    - name: JWT_ACCESS
      value: ${{ secrets.JWT_ACCESS }}
    - name: JWt_REFRESH
      value: ${{ secrets.JWT_REFRESH }}
    - name: SERVER_PORT
      value: ${{ secrets.SERVER_PORT }}
    - name: AWS_REGION
      value: ${{ secrets.AWS_REGION }}
    - name: AWS_STACK
      value: ${{ secrets.AWS_STACK }}
    - name: AWS_PROFILE
      value: ${{ secrets.AWS_PROFILE }}
    - name: AWS_ACCESS_KEY
      value: ${{ secrets.AWS_ACCESS_KEY }}
    - name: AWS_SECRET_KEY
      value: ${{ secrets.AWS_SECRET_KEY }}
    - name: S3_BUCKET
      value: ${{ secrets.S3_BUCKET }}
    - name: S3_URL
      value: ${{ secrets.S3_URL }}
